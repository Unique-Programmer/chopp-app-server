version: '3.8'

services:
  main:
    container_name: main
    build:
      context: .
    env_file:
      - .env.development
    volumes:
      - .:/app
      - ./node_modules:/app/node_modules
    ports:
      - 6001:6000
      - 9229:9229
    command: npm run start:dev
    depends_on:
      - postgres
      - redis
    restart: always
    networks:
      - app-network

  postgres:
    container_name: postgres
    image: postgres:16
    env_file:
      - .env.development
    environment:
      PG_DATA: /var/lib/postgresql/data
    ports:
      - 5555:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    networks:
      - app-network

  redis:
    container_name: redis
    image: redis:7-alpine
    ports: 
      - 6444:6444
    volumes:
      - redisdata:/data
    command: redis-server --save 60 1 --loglevel warning
    restart: always
    networks:
      - app-network

  frontend-client:
    container_name: frontend-client
    build: ../../app-frontend-client/chopp-app-client/
    restart: always
    networks:
      - app-network

  frontend-admin:
    container_name: frontend-admin
    build: ../../app-frontend-admin/chopp-app-admin/
    restart: always
    networks:
      - app-network

  nginx:
    container_name: nginx
    build: ./nginx.conf
    restart: always
    ports:
      - "80:80"
    depends_on:
      - main
      - frontend-client
      - frontend-admin
    networks:
      - app-network

volumes:
  pgdata:
  redisdata:

networks:
  app-network:
    driver: bridge
