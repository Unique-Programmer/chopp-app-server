version: '3.8'

services:
  main:
    container_name: main
    build:
      context: .
    env_file:
      - .env.production
    volumes:
      - .:/app
      - ./node_modules:/app/node_modules
    command: sh -c "
      npm run migrate:prod &&
      npx sequelize-cli db:seed:all &&
      npm run start:prod"
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    network_mode: host
    healthcheck:
      test: ["CMD", "sh", "-c", "pg_isready -U postgres -d chopp"]
      interval: 10s
      timeout: 5s
      retries: 3


  postgres:
    container_name: postgres
    image: postgres:16
    env_file:
      - .env.production
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: chopp
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    network_mode: host

  redis:
    container_name: redis
    image: redis:7-alpine
    volumes:
      - redisdata:/data
    command: redis-server --save 60 1 --loglevel warning
    restart: always
    network_mode: host

volumes:
  pgdata:
  redisdata:
